{"version":3,"sources":["componants/CustomDialogs.js","componants/CustomAppBar.js","componants/MainContainer.js","componants/StickyFooter.js","componants/SuccessSnackBar.js","themes/MainTheme.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ResultDialog","open","closeFunction","result","resultText","minutes","seconds","wordsCount","Dialog","aria-labelledby","aria-describedby","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","onClick","copy","AboutDialog","align","LicenseDialog","dividers","variant","gutterBottom","HelpDialog","CustomAppBar","useState","anchorEl","setAnchorEl","aboutDialog","setAboutDialog","licenseDialog","setLicenseDialog","helpDialog","setHelpDialog","handleOpenCloseDialogs","handleMenuClose","Error","AppBar","position","elevation","Toolbar","Box","flexGrow","justifyContent","mt","style","maxWidth","src","logo","alt","IconButton","aria-controls","aria-haspopup","edge","event","currentTarget","MoreVert","Menu","Boolean","keepMounted","MenuItem","EstimateReadingTime","text","match","split","length","rate","Math","floor","toPrecision","ceil","MainContainer","openFunction","setText","Container","TextField","value","onChange","target","label","multiline","fullWidth","rows","size","display","ml","myFooterStyle","width","margin","marginTop","borderTop","myFooterLinksStyle","fontSize","textDecoration","padding","StickyFooter","href","rel","SuccessSnackBar","autoHideDuration","Alert","severity","MainTheme","createMuiTheme","palette","secondary","main","grey","App","resultDialog","setResultDialog","successSnackbar","setSuccessSnackbar","setResult","ThemeProvider","theme","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f2558846.chunk.js","sourcesContent":["import React from 'react';\nimport copy from 'copy-to-clipboard';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport const ResultDialog = ({ open, closeFunction, result }) => {\n\n    const resultText = (result.minutes > 0 ? result.minutes + ' min ' : '') + result.seconds + ' sec (' + result.wordsCount + ' word)';\n    \n    return (\n        <Dialog open={open} aria-labelledby=\"result-dialog-title\" aria-describedby=\"result-dialog-description\" onClose={closeFunction}>\n            <DialogTitle id=\"result-dialog-title\">\n                Estimated reading time\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"result-dialog-description\" >\n                    {resultText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"secondary\" onClick={() => {closeFunction(false)}} >exit</Button>\n                <Button color=\"primary\" onClick={() => {copy(resultText); closeFunction(true)}} >copy</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const AboutDialog = ({ open, closeFunction }) => {\n    return (\n        <Dialog open={open} onClose={() => {closeFunction('about')}}>\n            <DialogTitle id=\"about-dialog-title\">\n                About\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText align=\"justify\">\n                    <b>Reading</b> Meter is a minimalist single purpose webapp, that estimates the time necessary to read a given text.\n                </DialogContentText>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => {closeFunction('about')}}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport const LicenseDialog = ({open, closeFunction}) => {\n    return (\n        <Dialog open={open} onClose={() => {closeFunction('license')}}>\n            <DialogTitle id=\"license-dialog-title\">\n                License\n            </DialogTitle>\n            <DialogContent dividers>\n                <DialogContentText variant=\"h6\">\n                    GNU General Public License v3.0\n                </DialogContentText>\n                <DialogContentText gutterBottom align=\"justify\">\n                    Permissions of this strong copyleft license are conditioned on making available complete source code of licensed works and modifications,\n                     which include larger works using a licensed work, under the same license. Copyright and license notices must be preserved. Contributors \n                     provide an express grant of patent rights.\n                </DialogContentText>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => {closeFunction('license')}}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport const HelpDialog = ({open, closeFunction }) => {\n    return (\n        <Dialog open={open} onClose={() => {closeFunction('help')}}>\n            <DialogTitle id=\"help-dialog-title\">\n                Help\n            </DialogTitle>\n            <DialogContent dividers>\n                <DialogContentText gutterBottom>\n                    \n                </DialogContentText>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => {closeFunction('help')}}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    );\n};","import React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Box } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\nimport logo from '../logo.svg';\n\n// Dialogs\nimport { AboutDialog, LicenseDialog, HelpDialog } from './CustomDialogs';\n\nconst CustomAppBar = () => {\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const [aboutDialog, setAboutDialog] = useState(false);\n    const [licenseDialog, setLicenseDialog] = useState(false);\n    const [helpDialog, setHelpDialog] = useState(false);\n\n    const handleOpenCloseDialogs = (id) => {\n        switch (id) {\n            case 'about':\n                setAboutDialog(!aboutDialog);\n                handleMenuClose();\n                break;\n            case 'license':\n                setLicenseDialog(!licenseDialog);\n                handleMenuClose();\n                break;\n            case 'help':\n               setHelpDialog(!helpDialog);\n               handleMenuClose();\n                break;\n            default:\n                throw new Error();\n        }\n    }\n\n    const handleMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"inherit\" elevation={1}>\n                <Toolbar>\n                    <Box flexGrow={1} justifyContent=\"center\" mt={1}>\n                        <img style={{maxWidth: \"35vw\"}} src={logo} alt=\"Reading meter logo\" />\n                    </Box>\n                    <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" edge=\"end\" onClick={handleMenuOpen}>\n                        <MoreVert />\n                    </IconButton>\n                    <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose} keepMounted>\n                        <MenuItem onClick={() => {handleOpenCloseDialogs('license')}}>License</MenuItem>\n                        <MenuItem onClick={() => {handleOpenCloseDialogs('about')}}>About</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <AboutDialog open={aboutDialog} closeFunction={handleOpenCloseDialogs} />\n            <LicenseDialog open={licenseDialog} closeFunction={handleOpenCloseDialogs} />\n            <HelpDialog open={helpDialog} closeFunction={handleOpenCloseDialogs} />\n        </div>\n    );\n};\n\nexport default CustomAppBar;","import React, { useState } from 'react';\nimport { Container, TextField, Box, Button } from '@material-ui/core';\n\nconst MainContainer = ({ openFunction }) => {\n\n  const [text, setText] = useState('');\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const resetButtonFunction = () => {\n    setText('');\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n        <Box mt={3}>\n          <TextField id=\"text\" value={text} onChange={handleChange} label=\"Text to analyse\" variant=\"outlined\" multiline fullWidth rows=\"15\" size=\"small\"/>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={0.5}>\n          <Box>\n            <Button onClick={resetButtonFunction} variant=\"outlined\" color=\"secondary\">reset</Button>\n          </Box>\n          <Box ml={0.5}>\n            <Button onClick={() => {openFunction(EstimateReadingTime(text))}} variant=\"outlined\" color=\"primary\">estimate</Button>\n          </Box>\n        </Box>\n      </Container>\n  );\n};\n\nconst EstimateReadingTime = (text) => {\n\n  if(text==='' || !text.match(/[\\w\\d]/)) {\n    return {minutes: 0, seconds: 0, wordsCount: 0};\n  }\n  else {\n    const wordsPerMinutes = 200;\n    const wordsCount = text.split(/[ \\n]+[^ \\n]/g).length;\n    const rate = wordsCount / wordsPerMinutes;\n  \n    let minutes = Math.floor(rate);\n    let seconds = (rate - minutes).toPrecision(2) * 100;\n    if(seconds >= 60) {\n      seconds = seconds % 60;\n      minutes += 1;\n    }\n    seconds = Math.ceil(seconds);\n  \n    return {\n      minutes: minutes,\n      seconds: seconds,\n      wordsCount: wordsCount\n    };\n  }\n};\n\nexport default MainContainer;","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nconst myFooterStyle = {\n    width: \"95%\",\n    margin: \"auto\",\n    marginTop: \"37vh\",\n    borderTop: \"0.2px solid lightgray\",\n};\n\nconst myFooterLinksStyle = {\n    fontSize: \"0.8em\",\n    color: \"gray\",\n    textDecoration: \"none\",\n    padding: \"0px 10px\"\n};\n\nconst StickyFooter = () => {\n    return (\n        <div style={myFooterStyle}>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n                <a href=\"https://www.twitter.com/noisy_96\" target=\"_blank\" rel=\"noopener noreferrer\" style={myFooterLinksStyle}><p>Twitter</p></a>\n                <a href=\"https://www.github.com/noisy96/reatime\" target=\"_blank\" rel=\"noopener noreferrer\" style={myFooterLinksStyle}><p>Github</p></a>\n            </Box>\n        </div>\n    );\n};\n\nexport default StickyFooter;","import React from 'react';\nimport SnackBar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nconst SuccessSnackBar = ({open, closeFunction}) => {\n\n    return (\n        <SnackBar open={open} autoHideDuration={6000} onClose={() => {closeFunction()}}>\n            <Alert elevation={6} variant=\"filled\" severity=\"success\">Copied Successfully!</Alert>\n        </SnackBar>\n    );\n}\n\nexport default SuccessSnackBar;","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport { grey } from '@material-ui/core/colors';\n\n// Besides the secondary color (which I override ) we're using the default theme\n\nconst MainTheme = createMuiTheme({\n    palette: {\n      secondary: {\n        main: grey[600]\n      }\n    }\n});\n\nexport default MainTheme;","import React, { useState } from 'react';\n\n// Material Design components\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n// Custom Components\nimport CustomAppBar from './componants/CustomAppBar';\nimport MainContainer from './componants/MainContainer';\nimport StickyFooter from './componants/StickyFooter';\nimport { ResultDialog } from './componants/CustomDialogs';\nimport SuccessSnackBar from './componants/SuccessSnackBar';\n\n// Custom theme\nimport MainTheme from './themes/MainTheme';\n\nfunction App() {\n\n  const [resultDialog, setResultDialog] = useState(false);\n  const [successSnackbar, setSuccessSnackbar] = useState(false);\n  const [result, setResult] = useState({minutes: 0, seconds: 0, wordsCount: 0});\n  \n  const openResultDialog = (result) => {\n    setResult(result);\n    setResultDialog(true);\n  };\n\n  const closeDialog = (copy) => {\n    setResultDialog(false);\n    if(copy) {\n      setSuccessSnackbar(true);\n    }\n  };\n\n  const closeSnackbar = () => {\n    setSuccessSnackbar(false);\n  };\n\n  return (\n    <ThemeProvider theme={MainTheme}>\n      {/* The AppBar */}\n      <CustomAppBar />\n\n      {/* The main container with text input and buttons */}\n      <MainContainer openFunction={openResultDialog} />\n\n      {/* Footer created from scratch */}\n      <StickyFooter />\n\n      {/* A dialog for displaying the estimated reading time calculated */}\n      <ResultDialog open={resultDialog} closeFunction={closeDialog} result={result}/>\n\n      {/* Feedback snackbar for announcing the success of the copying */}\n      <SuccessSnackBar open={successSnackbar} closeFunction={closeSnackbar} />\n      \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1c5f7e91.svg\";"],"sourceRoot":""}